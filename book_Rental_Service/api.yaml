openapi: 3.0.3
info:
  title: Book Rental Service API
  version: 1.0.0
  description: REST API for managing book rentals.

servers:
  - url: http://localhost:8080/api/rentals

paths:
  /:
    get:
      summary: Get all rentals
      tags: [Rentals]
      responses:
        '200':
          description: List of all rentals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rental'
    post:
      summary: Create a new rental
      tags: [Rentals]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rental'
      responses:
        '201':
          description: Rental created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '409':
          description: The book is already rented

  /rental/{rentalId}:
    get:
      summary: Get rental by rental ID
      tags: [Rentals]
      parameters:
        - name: rentalId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rental found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '404':
          description: Rental not found

  /book/{bookId}:
    get:
      summary: Get rental by book ID
      tags: [Rentals]
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Rental found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rental'
        '404':
          description: Rental not found

  /user/{userId}:
    get:
      summary: Get rentals by user ID
      tags: [Rentals]
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of rentals for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rental'
        '404':
          description: No rentals found for user

  /book/{bookId}/return:
    patch:
      summary: Return a rented book
      tags: [Rentals]
      parameters:
        - name: bookId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Book returned successfully
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Rental not found

components:
  schemas:
    Rental:
      type: object
      properties:
        bookId:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
        rentalDuration:
          type: integer
      required:
        - bookId
        - userId
        - rentalDuration