networks:
  book-network:
    driver: bridge


services:
  bookrentalservicemariadb:
    image: mariadb
    container_name: bookrentalservice-mariadb
    ports:
      - "127.0.0.1:3307:3306"
    environment:
      MARIADB_ROOT_PASSWORD: root_password
      MARIADB_DATABASE: book_rental_service_db
      MARIADB_USER: book_rental_service_user
      MARIADB_PASSWORD: book_rental_service_super_secret
    volumes:
      - ./book_Rental_Service/docker_data/mariadb:/var/lib/mysql
    networks:
      - book-network
    restart: unless-stopped

  bookrentalservice:
    build:
      context: ./book_Rental_Service
      dockerfile: Dockerfile
    image: bookrentalservice:latest
    container_name: bookrentalservicecontainer
    ports:
      - "127.0.0.1:8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://bookrentalservicemariadb:3306/book_rental_service_db
      SPRING_DATASOURCE_USERNAME: book_rental_service_user
      SPRING_DATASOURCE_PASSWORD: book_rental_service_super_secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - bookrentalservicemariadb
    networks:
      - book-network
    restart: unless-stopped

  bookservicemariadb:
    image: mariadb
    container_name: bookservice-mariadb
    ports:
      - "127.0.0.1:3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: root_password
      MARIADB_DATABASE: book_service_db
      MARIADB_USER: book_service_user
      MARIADB_PASSWORD: book_service_super_secret
    volumes:
      - ./book_Service/docker_data/mariadb:/var/lib/mysql
    networks:
      - book-network
    restart: unless-stopped

  bookservice:
    build:
      context: ./book_Service
      dockerfile: Dockerfile
    image: bookservice:latest
    container_name: bookservicecontainer
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://bookservicemariadb:3306/book_service_db
      SPRING_DATASOURCE_USERNAME: book_service_user
      SPRING_DATASOURCE_PASSWORD: book_service_super_secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    depends_on:
      - bookservicemariadb
    networks:
      - book-network
    restart: unless-stopped

