openapi: 3.0.3
info:
  title: User Management Service
  version: 1.0.0
  description: REST API for managing users

servers:
  - url: http://localhost:8080
    description: Local server

paths:
  /api/users:
    get:
      summary: Get all users
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: Add a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '200':
          description: The created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

  /api/users/{id}:
    get:
      summary: Get user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: The user with the given ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: Delete user by ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: User deleted message
          content:
            text/plain:
              schema:
                type: string
                example: User deleted successfully
        '404':
          description: User not found

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: Max Mustermann
        email:
          type: string
          example: max@example.com
        password:
          type: string
          example: geheim123
      required:
        - id
        - name
        - email
        - password

    UserCreate:
      type: object
      properties:
        name:
          type: string
          example: Max Mustermann
        email:
          type: string
          example: max@example.com
        password:
          type: string
          example: geheim123
      required:
        - name
        - email
        - password